package com.example.wdm;

import java.util.ArrayList;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ImageView.ScaleType;
import android.widget.Toast;

/**
 * @功能描述：主程序入口类
 */
public class MainActivity extends Activity implements OnClickListener,
		OnPageChangeListener{
	// 定义ViewPager对象
	private ViewPager viewPager;
	// 定义ViewPager适配器
	private ViewPagerAdapter vpAdapter;
	// 定义一个ArrayList来存放View
	private ArrayList<View> views;
	// 引导图片资源
	private static final int[] pics = { R.drawable.yy1, R.drawable.yy2,
			R.drawable.yy3, R.drawable.yy5};
	// 底部小点的图片
	private ImageView[] points;
	// 记录当前选中位置
	private int currentIndex;
	
	private static final float MIN_SCALE = 0.75f;
	
    Button btn_guide;
    
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.yindaoye);
		initView();
		initData();
	}

	/**
	 * 初始化组件
	 */
	private void initView() {
		// 实例化ArrayList对象
		views = new ArrayList<View>();
		// 实例化ViewPager
		viewPager = (ViewPager) findViewById(R.id.viewpager);
		// 实例化ViewPager适配器
		vpAdapter = new ViewPagerAdapter(views);
		
		btn_guide=(Button) findViewById(R.id.btn_guide);
		
	}
	
	/**
	 * 初始化数据
	 */
	private void initData() {
		// 定义一个布局并设置参数
		LinearLayout.LayoutParams mParams = new LinearLayout.LayoutParams(
				LinearLayout.LayoutParams.MATCH_PARENT,
				LinearLayout.LayoutParams.MATCH_PARENT);

		// 初始化引导图片列表
		for (int i = 0; i < pics.length; i++) {
			ImageView iv = new ImageView(this);
			//iv.setLayoutParams(mParams);
			//防止图片不能填满屏幕
			iv.setScaleType(ScaleType.FIT_XY);
			//加载图片资源
			iv.setImageResource(pics[i]);
			views.add(iv);  
			//在Activity中加载要显示的Views，通过动态加载布局得到一个个View
		}
		//ViewPager类需要一个PagerAdapter适配器类给它提供数据
		// 设置数据 //将ViewPager和自定义的PagerAdapter关联起来
		viewPager.setAdapter(vpAdapter);
		
		// 设置监听
		viewPager.setOnPageChangeListener(this);

		// 初始化底部小点
		initPoint();
	}

	   
	/**
	 * 初始化底部小点
	 */
	private void initPoint() {
		
		LinearLayout linearLayout = (LinearLayout) findViewById(R.id.ll);

		points = new ImageView[pics.length];

		// 循环取得小点图片
		for (int i = 0; i < pics.length; i++) {
			// 得到一个LinearLayout下面的每一个子元素
			points[i] = (ImageView) linearLayout.getChildAt(i);
			// 默认都设为灰色
			points[i].setEnabled(true);
			// 给每个小点设置监听
			points[i].setOnClickListener(this);
			// 设置位置tag，方便取出与当前位置对应
			points[i].setTag(i);
		}

		// 设置当面默认的位置
		currentIndex = 0;
		// 设置为红色，即选中状态
		points[currentIndex].setEnabled(false);
	}

	/**
	 * 滑动状态改变时调用
	 */
	@Override
	public void onPageScrollStateChanged(int arg0) {

	}

	/**
	 * 当前页面滑动时调用
	 */
	@Override
	public void onPageScrolled(int arg0, float arg1, int arg2) {

	}

	/**
	 * 新的页面被选中时调用
	 */
	@Override
	public void onPageSelected(int arg0) {
		// 设置底部小点选中状态
		setCurDot(arg0);
	}

	@Override
	public void onClick(View v) {
		//与102行 setTag(i);相对应，取出与当前位置对应
		int position = (Integer) v.getTag();
		
		setCurView(position);
		setCurDot(position);
	}

	/**
	 * 设置当前页面的位置
	 */
	private void setCurView(int position) {
		if (position < 0 || position >= pics.length) {
			return;
		}
		viewPager.setCurrentItem(position);
	}

	/**
	 * 设置当前的小点的位置
	 */
	private void setCurDot(int positon) {
		if (positon < 0 || positon > pics.length - 1 || currentIndex == positon) {
			return;
		}
		points[positon].setEnabled(false);
		points[currentIndex].setEnabled(true);

		currentIndex = positon;
		//currentIndex 当前被选中的位置	
		// currentIndex 为3的时候是最后一张图
		
		if(currentIndex==3){				
			btn_guide.setText("欢迎使用");
			//btn_guide.setBackground(getWallpaper());
			btn_guide.setOnClickListener(new OnClickListener() {			
				@Override
				public void onClick(View v) {
					// TODO 自动生成的方法存根
				//	Toast.makeText(MainActivity.this,"11", 1).show();
					Intent intent=new Intent(MainActivity.this,SplashActivity .class);
					startActivity(intent);
				}
			});
		}else{
			btn_guide.setText("");
		}
		
	}
}
